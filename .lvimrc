" C++ Development Configuration
"""""""""""""""""""""""""""""""
if !exists('g:cpp_development_configuration_folder')
  let g:cpp_development_configuration_folder = getcwd()

  " Start Rtags Daemon if not already running
  """""""""""""""""""""""""""""""""""""""""""
  let rdm_pid = system('pgrep rdm || echo 0')
  if rdm_pid == 0
    echom 'rdm server is being started'
    execute '!rdm &'
  endif

  " Provide rtags with compilation database for current project.
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  let rtags_compile_command = 'rc -J ' . g:cpp_development_configuration_folder
  execute '!' . rtags_compile_command

  " Ale configuration.
  """"""""""""""""""""
  let g:ale_linters = {'cpp': ['clangcheck', 'flawfinder', 'cppcheck']}
  let g:ale_c_build_dir = getcwd()
  let g:ale_cpp_cppcheck_options = '--project=' . getcwd() . '/compile_commands.json'

  " Deoplete-Clang configuration
  """"""""""""""""""""""""""""""
  let g:deoplete#sources#clang#clang_complete_database = getcwd()

  " Neoformat
  """""""""""
  function! neoformat#formatters#cpp#enabled() abort
    return ['clangformat']
  endfunction

  function! neoformat#formatters#cpp#clangformat() abort
    return {'exe': 'clang-format', 'stdin': 1}
  endfunction

  " Makeprg
  """""""""
  let &makeprg="make --directory=./build"
  let &makeef=getcwd() . "/build/build_errors.txt"

  " Custom Mappings
  """""""""""""""""
  map <F3> :make<CR>
  map <F4> :!cmake -d ./build<CR>
  map <F5> :!make --directory=./build -s && ./build/console_menu/test_console_menu<CR>
endif
